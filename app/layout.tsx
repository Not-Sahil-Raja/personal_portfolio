import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import SmoothScroll from "@/utils/SmoothScrolling";
import { Suspense } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const BitxMap = localFont({
  src: "./fonts/BitxMap Font tfb.ttf",
  variable: "--font-bitxmap",
  weight: "100 900",
});

const coolvetica = localFont({
  src: "./fonts/coolvetica rg.otf",
  variable: "--font-coolvetica",
  weight: "100 900",
});

const MonumentExtended = localFont({
  src: "./fonts/MonumentExtended-Regular.otf",
  variable: "--font-monument-extended",
  weight: "100 900",
});

const ppneuemonteral = localFont({
  src: [
    {
      path: "./fonts/ppneuemontreal/ppneuemontreal-thin.otf",
      weight: "300",
      style: "thin",
    },
    {
      path: "./fonts/ppneuemontreal/ppneuemontreal-book.otf",
      weight: "400",
      style: "normal",
    },
    {
      path: "./fonts/ppneuemontreal/ppneuemontreal-medium.otf",
      weight: "500",
      style: "medium",
    },
    {
      path: "./fonts/ppneuemontreal/ppneuemontreal-semibolditalic.otf",
      weight: "600",
      style: "semibold",
    },
    {
      path: "./fonts/ppneuemontreal/ppneuemontreal-bold.otf",
      weight: "700",
      style: "bold",
    },
  ],
  variable: "--font-ppneuemonteral",
});

export const metadata: Metadata = {
  title: "Sahil Raja â€” Web Developer",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`
          ${geistSans.variable} 
          ${geistMono.variable} 
          ${BitxMap.variable} 
          ${coolvetica.variable} 
          ${MonumentExtended.variable} 
          ${ppneuemonteral.variable}
          antialiased`}
      >
        <Suspense fallback={<div>Loading...</div>}>
          <SmoothScroll>{children}</SmoothScroll>
        </Suspense>
      </body>
    </html>
  );
}
